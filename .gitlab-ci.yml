stages:
  - dependencies
#  - test
  - build
  - deploy

install_dependencies_angular:
  stage: dependencies
  image: node
  before_script:
    - cd frontend
  script:
    - npm ci --prefer-offline --no-audit
  artifacts:
    paths:
      - frontend/node_modules
    expire_in: 1 days

#python_code_quality:
#  stage: test
#  image: python:3.7
#  before_script:
#    - cd backend/proxmox_api
#    - pip3 install pylint
#  script:
#    - pylint *.py > ../code_quality.txt
#  artifacts:
#    paths:
#      - backend/code_quality.txt
#    expire_in: 2 days
#    when: always
#  allow_failure: true

#python_code_test:
 # stage: test
  #image: python:3.7
 # before_script:
  #  - cd backend/proxmox_api/tests
   # - pip3 install pytest
  #script:
   # - pytest

#angular_code_quality:
#  stage: test
#  image: node
#  before_script:
#    - cd frontend
#    - NG_CLI_ANALYTICS=ci
#    - npm install -g @angular/cli
#  script:
#    - ls
#    - ng lint > code_quality.txt
#  artifacts:
#    paths:
#      - frontend/code_quality.txt
#    expire_in: 2 days
#    when: always
#  allow_failure: true

angular_build:
  stage: build
  image: node
  before_script:
    - cd frontend
    - NG_CLI_ANALYTICS=ci
    - export NODE_OPTIONS=--openssl-legacy-provider
    - npm install -g @angular/cli
  script:
    - ng build --prod
  environment:
    name: production
    url: https://proxmox.minet.net/
  artifacts:
    paths:
      - frontend/dist
    expire_in: 2 days

deploy_backend:
  stage: deploy
  before_script:
    - export http_proxy="http://192.168.104.61:82/"
    - export https_proxy="http://192.168.104.61:82/"
    - cd backend
    - pip3 install -r requirements.txt
    - sudo /bin/systemctl stop proxmox_api
    - rm -rf /var/www/proxmox_api
  script:
    - cp -r proxmox_api /var/www/proxmox_api
    - cd /var/www/proxmox_api
    - sudo /bin/systemctl start proxmox_api
  tags:
    - hosting-proxmox 
  only:
    - master

deploy_frontend:
  stage: deploy
  script:
    - rm -rf /var/www/proxmox_dashboard
    - cp -r frontend/dist/hosting /var/www/proxmox_dashboard
  tags:
    - hosting-proxmox
  only:
    - master


deploy_backend_dev:
  stage: deploy
  before_script:
    - export http_proxy="http://192.168.104.61:82/"
    - export https_proxy="http://192.168.104.61:82/"
    - cd backend
    - pip3 install -r requirements.txt
    - sudo /bin/systemctl stop proxmox_api
    - rm -rf /var/www/proxmox_api
  script:
    - cp -r proxmox_api /var/www/proxmox_api
    - cd /var/www/proxmox_api
    - sudo /bin/systemctl start proxmox_api
  tags:
    - hosting-dev 
  only:
    - development

deploy_frontend_dev:
  stage: deploy
  script:
    - rm -rf /var/www/proxmox_dashboard
    - cp -r frontend/dist/hosting /var/www/proxmox_dashboard
  tags:
    - hosting-dev
  only:
    - development
