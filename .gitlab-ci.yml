stages:
  - lint
  - test
  - dependencies
  - build
  - deploy

python_code_quality:
  stage: lint
  image: python:3.9
  before_script:
    - cd backend
    - export PYTHONPATH=$(pwd)
    - export http_proxy="http://192.168.102.61:82/"
    - export https_proxy="http://192.168.102.61:82/"
    - pip3 install pylint
  script:
    - pylint --fail-under=1 proxmox_api/*.py > code_quality.txt
    - cat code_quality.txt
  artifacts:
    paths:
      - backend/code_quality.txt
    expire_in: 2 days
    when: always
  allow_failure: true


angular_code_quality:
  stage: lint
  image: node
  before_script:
    - cd frontend
    - NG_CLI_ANALYTICS=ci
    - npm install -g @angular/cli
  script:
    - ng add @angular-eslint/schematics --skip-confirmation
    - ng lint --force > code_quality.txt
    - cat code_quality.txt
  artifacts:
    paths:
      - frontend/code_quality.txt
    expire_in: 2 days
    when: always
  allow_failure: true


test_backend:
  stage: test
  image: python:3.9
  needs : 
   - python_code_quality
  before_script:
    - export http_proxy="http://192.168.102.61:82/"
    - export https_proxy="http://192.168.102.61:82/"
    - export no_proxy="192.168.104.7"
    - apt update 
    - apt install sqlite3
    - export ENVIRONMENT='TEST'
    - export KEYRING_DNS_SECRET=$KEYRING_DNS_SECRET
    - export PROXMOX_API_KEY_NAME=$PROXMOX_API_KEY_NAME
    - export PROXMOX_API_KEY=$PROXMOX_API_KEY
    - export PROXMOX_BACK_DB_DEV=$PROXMOX_BACK_DB_DEV
    - cd backend/
    - export PYTHONPATH=$(pwd)
    - pip3 install -r requirements.txt
    - pip3 install -r test-requirements.txt
  script :
    - pytest --cov=proxmox_api --cov-report term-missing --cov-report xml:./coverage_out_report.xml --junitxml=report.xml
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    when: always
    paths:
      - backend/report.xml
    reports:
      junit: backend/report.xml

install_dependencies_angular:
  stage: dependencies
  image: node
  needs : 
   - test_backend
   - angular_code_quality
  before_script:
    - npm config rm proxy
    - npm config rm https-proxy
    - npm config set proxy "http://192.168.102.61:82/"
    - npm config set https-proxy "http://192.168.102.61:82/"
    - cd frontend
  script:
    - npm ci --prefer-offline --no-audit
  artifacts:
    paths:
      - frontend/node_modules
    expire_in: 1 days



angular_build:
  stage: build
  image: node
  needs: 
    - install_dependencies_angular
  before_script:
    - npm cache clean --force  
    - npm config rm proxy
    - npm config rm https-proxy
    - npm config set proxy "http://192.168.102.61:82/"
    - npm config set https-proxy "http://192.168.102.61:82/"
    - npm cache clear --force
    - cd frontend
    - NG_CLI_ANALYTICS=ci
    - export NODE_OPTIONS=--openssl-legacy-provider
    - npm install -g @angular/cli
  script:
    - yarn ng build
  artifacts:
    paths:
      - frontend/dist
    expire_in: 2 days

deploy_backend:
  stage: deploy
  needs :
    - angular_build
  before_script:
    - export http_proxy="http://192.168.104.61:82/"
    - export https_proxy="http://192.168.104.61:82/"
    - cd backend
    - pip3 install -r requirements.txt
    - sudo /bin/systemctl stop proxmox_api
    - rm -rf /var/www/proxmox_api
  script:
    - cp -r proxmox_api /var/www/proxmox_api
    - cd /var/www/proxmox_api
    - sudo /bin/systemctl start proxmox_api
  tags:
    - hosting-proxmox
  environment:
    name: production
    url: https://hosting.minet.net/
  only:
    - master

deploy_frontend:
  stage: deploy
  needs:
    - angular_build
  script:
    - rm -rf /var/www/proxmox_dashboard
    - cp -r frontend/dist/hosting /var/www/proxmox_dashboard
  tags:
    - hosting-proxmox
  environment:
    name: production
    url: https://hosting.minet.net/
  only:
    - master


deploy_backend_dev:
  stage: deploy
  needs:
    - angular_build
  before_script:
    - export http_proxy="http://192.168.104.61:82/"
    - export https_proxy="http://192.168.104.61:82/"
    - cd backend
    - pip3 install -r requirements.txt 
    - sudo /bin/systemctl stop proxmox_api
    - rm -rf /var/www/proxmox_api
  script:
    - cp -r proxmox_api /var/www/proxmox_api
    - cd /var/www/proxmox_api
    - sudo /bin/systemctl start proxmox_api
  tags:
    - hosting-dev
  environment:
    name: development
    url: https://hosting-dev.minet.net/
  only:
    - development

deploy_frontend_dev:
  stage: deploy
  needs:
    - angular_build
  script:
    - rm -rf /var/www/proxmox_dashboard
    - cp -r frontend/dist/hosting /var/www/proxmox_dashboard
  environment:
    name: development
    url: https://hosting-dev.minet.net/
  tags:
    - hosting-dev
  only:
    - development
